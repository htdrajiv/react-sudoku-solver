{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/Projects/NodeReactJs/SuDoKu/su-do-ku/src/components/Board.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport SearchingAndBacktracking from '../sudoku/Algorithm.js';\nimport InputBoard from './InputBoard';\nvar initialInput = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0] // [5, 3, 0, 0, 7, 0, 0, 0, 0],\n// [6, 0, 0, 1, 9, 5, 0, 0, 0],\n// [0, 9, 8, 0, 0, 0, 0, 6, 0],\n// [8, 0, 0, 0, 6, 0, 0, 0, 3],\n// [4, 0, 0, 8, 0, 3, 0, 0, 1],\n// [7, 0, 0, 0, 2, 0, 0, 0, 6],\n// [0, 6, 0, 0, 0, 0, 2, 8, 0],\n// [0, 0, 0, 4, 1, 9, 0, 0, 5],\n// [0, 0, 0, 0, 8, 0, 0, 7, 9]\n];\n\nfunction Board(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    inputBoard: initialInput,\n    updatedBoard: [],\n    uploadProgress: {\n      status: \"None\",\n      progress: 0\n    }\n  });\n\n  let prepareInitialInput = updatedInputBoard => {\n    setState({\n      inputBoard: updatedInputBoard\n    });\n  };\n\n  let updateBoard = updatedBoard => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      updatedBoard: updatedBoard\n    }));\n  };\n\n  let getBoard = inputBoard => {\n    var _tr = inputBoard.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: item.map((_item, _index) => {\n          var key = _index + index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1 border\",\n            style: {\n              position: \"relative\",\n              margin: \"2 2 2 2\"\n            },\n            children: _item === 0 ? '' : _item\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        margin: \"10%\"\n      },\n      children: _tr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n\n  let resetResultBoard = () => {};\n\n  let resultBoard = getBoard(state.updatedBoard);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Su-Do-Ku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: /*#__PURE__*/_jsxDEV(InputBoard, {\n          updateBoard: prepareInitialInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetResultBoard,\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), resultBoard]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        margin: \"0 0 10% 30%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: SearchingAndBacktracking.SudokuUsingStack.main.bind(this, {\n          inputBoard: state.inputBoard,\n          updateBoard: updateBoard\n        }),\n        children: \"Solve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Board;","map":{"version":3,"sources":["/Applications/Projects/NodeReactJs/SuDoKu/su-do-ku/src/components/Board.jsx"],"names":["React","useState","SearchingAndBacktracking","InputBoard","initialInput","Board","props","state","setState","inputBoard","updatedBoard","uploadProgress","status","progress","prepareInitialInput","updatedInputBoard","updateBoard","getBoard","_tr","map","item","index","_item","_index","key","position","margin","resetResultBoard","resultBoard","SudokuUsingStack","main","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport SearchingAndBacktracking from '../sudoku/Algorithm.js'\r\nimport InputBoard from './InputBoard'\r\n\r\nvar initialInput = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    // [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n    // [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n    // [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n    // [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n    // [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n    // [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n    // [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n    // [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n    // [0, 0, 0, 0, 8, 0, 0, 7, 9]\r\n]\r\n\r\nfunction Board(props) {\r\n    const [state, setState] = useState({\r\n        inputBoard: initialInput, updatedBoard: [], uploadProgress: { status: \"None\", progress: 0 }\r\n    });\r\n\r\n    let prepareInitialInput = (updatedInputBoard) => {\r\n        setState({\r\n            inputBoard: updatedInputBoard\r\n        })\r\n    }\r\n\r\n    let updateBoard = (updatedBoard) => {\r\n        setState({\r\n            ...state,\r\n            updatedBoard: updatedBoard\r\n        })\r\n    }\r\n\r\n    let getBoard = (inputBoard) => {\r\n        var _tr = inputBoard.map((item, index) => {\r\n            return (\r\n                <div className=\"row\" key={index}>\r\n                    {\r\n                        item.map((_item, _index) => {\r\n                            var key = _index + index;\r\n                            return (\r\n                                <div className=\"col-1 border\" key={key} style={{ position: \"relative\", margin: \"2 2 2 2\" }}>\r\n                                    {_item === 0 ? '' : _item}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"container\" style={{ margin: \"10%\" }}>\r\n                {_tr}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let resetResultBoard = () => {\r\n\r\n    }\r\n\r\n    let resultBoard = getBoard(state.updatedBoard);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h4> Su-Do-Ku</h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <InputBoard updateBoard={prepareInitialInput} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <button onClick={resetResultBoard}>reset</button>\r\n                    {resultBoard}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{ margin: \"0 0 10% 30%\" }}>\r\n                <button type=\"button\"\r\n                    onClick={SearchingAndBacktracking.SudokuUsingStack.main.bind(this, { inputBoard: state.inputBoard, updateBoard: updateBoard })} >\r\n                    Solve\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}